# Root schema definition
schema {
    query: Query
    mutation: Mutation
}

# Entry points for querying the API
type Query {
    # version represents the API server version responding to your requests.
    version: String!

    # Get collection by address
    collection(contract: Address!): Collection!

    # List all collections
    collections(first: Int, after: Cursor, last: Int, before: Cursor): CollectionConnection!

    # Get token by address and id
    token(contract: Address!, tokenId: BigInt!): Token

    # List all tokens (with defined filter and sorting)
    tokens(filter: TokenFilter, sortBy: TokenSorting, sortDir: SortingDirection, first: Int, after: Cursor, last: Int, before: Cursor): TokenConnection!

    # List all tokens listings (DEPRECATED - use tokens() with hasListing filter)
    listings(first: Int, after: Cursor, last: Int, before: Cursor): ListingConnection!

    # List all tokens offers (DEPRECATED - use tokens() with hasOffer filter)
    offers(first: Int, after: Cursor, last: Int, before: Cursor): OfferConnection!

    # Get user by address
    user(address: Address!): User!

    # Get user authenticated using bearer token
    loggedUser: User

    # List authenticated user favourite tokens (DEPRECATED - use tokenLike() in User)
    loggedUserTokenLikes(first: Int, after: Cursor, last: Int, before: Cursor): TokenLikeConnection!

    # Get currently set shipping address for tokens redeem.
    loggedUserShippingAddress: ShippingAddress
}

# Mutation endpoints for modifying the data
type Mutation {
    # Generate login challenge to be signed by private key and used to log-in
    initiateLogin: String!

    # Use private key signed login challenge to get bearer token.
    login(user: Address!, challenge: String!, signature: String!): String!

    # Update user profile
    updateUser(username: String!, bio: String!, email: String!, avatar: String!, banner: String!): Boolean!

    # Set token as liked (add into favourites)
    likeToken(contract: Address!, tokenId: BigInt!): Boolean!

    # Unset token as liked (remove from favourites)
    unlikeToken(contract: Address!, tokenId: BigInt!): Boolean!

    # Update shipping address for tokens redeem.
    updateShippingAddress(address: InputShippingAddress!): Boolean!
}
