# Token represents item, which can be listed or offered in the marketplace.
type Token {
    # Address of the token contract
    contract: Address!

    # ID of the token (in given token contract)
    tokenId: BigInt!

    # Name of the token
    name: String!

    # Description of the token
    description: String!

    # URL of the token image
    image: String

    # URL of the token image on the proxy
    imageProxy: String

    # List owners of the token and their token balances
    ownerships(first: Int, after: Cursor, last: Int, before: Cursor): OwnershipConnection!

    # Events on given token
    events(first: Int, after: Cursor, last: Int, before: Cursor): TokenEventConnection!

    # Current listings of the token
    listings(first: Int, after: Cursor, last: Int, before: Cursor): ListingConnection!

    # Current offers of the token
    offers(first: Int, after: Cursor, last: Int, before: Cursor): OfferConnection!
}

type TokenEdge {
    cursor: Cursor!
    node: Token!
}

type TokenConnection {
    # Edges contains provided edges of the sequential list.
    edges: [TokenEdge!]!

    # TotalCount is the total amount of items in the list.
    totalCount: BigInt!

    # PageInfo is an information about the current page of the list.
    pageInfo: PageInfo!
}

enum TokenSorting {
    CREATED
    LAST_LISTING
    LAST_TRADE
}
