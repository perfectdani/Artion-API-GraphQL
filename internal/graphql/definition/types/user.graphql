# User represents user account/profile.
type User {
    # Address of the user wallet
    address: Address!

    # Name/Nickname
    username: String

    # User bio (description)
    bio: String

    # User email (null when not set or visible)
    email: String

    # IPFS hash of the user avatar image
    avatar: String

    # URL of the user avatar on the resizing proxy
    avatarThumb: String

    # IPFS hash of the user banner image
    banner: String

    # List owned tokens and their amount
    ownerships(first: Int, after: Cursor, last: Int, before: Cursor): OwnershipConnection!

    # List user favourite tokens
    tokenLikes(first: Int, after: Cursor, last: Int, before: Cursor): TokenLikeConnection!

    # List tokens created by the user
    createdTokens(first: Int, after: Cursor, last: Int, before: Cursor): TokenConnection!

    # List followers of the user
    followers(first: Int, after: Cursor, last: Int, before: Cursor): FollowConnection!

    # List users who are following the user
    following(first: Int, after: Cursor, last: Int, before: Cursor): FollowConnection!

    # Past activities on tokens (trades, listing created, auction bid, etc.)
    activities(first: Int, after: Cursor, last: Int, before: Cursor): ActivityConnection!
}

type UserEdge {
    cursor: Cursor!
    node: User!
}

type UserConnection {
    # Edges contains provided edges of the sequential list.
    edges: [UserEdge!]!

    # TotalCount is the total amount of items in the list.
    totalCount: BigInt!

    # PageInfo is an information about the current page of the list.
    pageInfo: PageInfo!
}
