# ActivityType represents type of Activity on a token.
enum ActivityType {
    UNKNOWN

    # Listing created (offered for sale for given price by the token owner)
    LISTING_CREATED

    # Listing updated (changed price)
    LISTING_UPDATED

    # Listing cancelled
    LISTING_CANCELLED

    # Token sold in a listing
    LISTING_SOLD

    # Offer created by a buyer
    OFFER_CREATED

    # Offer cancelled
    OFFER_CANCELLED

    # Token sold by an offer
    OFFER_SOLD

    # Auction created
    AUCTION_CREATED

    # New bid in the auction
    AUCTION_BID

    # Bid cancelled (only when the auction allows is)
    AUCTION_BID_WITHDRAW

    # Auction cancelled
    AUCTION_CANCELLED

    # Auction finished - token sold in the auction
    AUCTION_RESOLVED

    # Auction updated (changed time range or reserve price)
    AUCTION_UPDATED

    # Token transfer
    TRANSFER

    # Token minted (created)
    MINT

    # Token burned (redeemed)
    BURN
}

# Activity represents an event that happened on a market-sellable NFT token.
type Activity {
    # The time of the event
    time: Time!

    # Type of the activity
    type: ActivityType!

    # The token contract
    contract: Address!

    # The token id
    tokenId: BigInt!

    # The amount of tokens (always 1 for ERC-721)
    quantity: BigInt

    # The address of initiator of the activity (auction bidder, offer proposer, seller of listed item)
    from: Address!

    # The initiator of the activity (auction bidder, offer proposer, seller of a listed item)
    fromUser: User!

    # The address of receiver of the activity (buyer of a listed item, offer acceptor, item owner for bids)
    to: Address

    # The receiver of the activity (buyer of a listed item, offer acceptor, item owner for bids)
    toUser: User

    # The pay token of unitPrice
    payToken: Address

    # The price for one piece of the token (total price = unitPrice * quantity)
    unitPrice: BigInt

    # Start time (of the auction/listing)
    startTime: Time

    # End time (of auction/offer)
    endTime: Time

    # The related token
    token: Token

    # The FantomMarketplace contract (for offers/listings)
    marketplace: Address

    # The FantomAuction contract (for auctions)
    auctionHall: Address

    # The transaction hash
    trxHash: String!
}

type ActivityEdge {
    cursor: Cursor!
    node: Activity!
}

type ActivityConnection {
    # Edges contains provided edges of the sequential list.
    edges: [ActivityEdge!]!

    # TotalCount is the total amount of items in the list.
    totalCount: BigInt!

    # PageInfo is an information about the current page of the list.
    pageInfo: PageInfo!
}

input ActivityFilter {
    types: [ActivityType!]
}

# Price history is aggregation of trades from one day
type PriceHistory {
    # Time of the day
    time: Time!

    # Average token price in USD, 6-decimals fixed point, hex
    price: Long!
}
