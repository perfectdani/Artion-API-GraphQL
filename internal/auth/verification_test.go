package auth

import (
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/common/hexutil"
	"github.com/onsi/gomega"
	"testing"
)

func TestVerification(t *testing.T) {
	g := gomega.NewGomegaWithT(t)
	message := "I am signing my one-time nonce: ABCDEF"
	address := common.HexToAddress("0x83A6524Be9213B1Ce36bCc0DCEfb5eb51D87aD10")
	// signature generated by Metamask using web3.eth.personal.sign(message, accounts[0], '')
	signature, _ := hexutil.Decode("0xac70a4396976772a556900fea540033736380ddddb591a3bc5bee30321f5bbdb060969d6e45e03a58f2138f39705a4d6572f1856e902be421bed847cb53f371f1c")

	result, err := verifySignature(message, address, signature)
	g.Expect(result).To(gomega.BeTrue())
	g.Expect(err).To(gomega.BeNil())
}
